[package]
name = "zino-orm"
description = "ORM for zino."
version = "0.4.1"
rust-version = "1.80"
edition = "2021"
license = "MIT"
categories = ["asynchronous", "network-programming", "web-programming"]
keywords = ["http", "web", "framework"]
homepage = "https://github.com/zino-rs/zino"
repository = "https://github.com/zino-rs/zino"
documentation = "https://docs.rs/zino-orm"
readme = "README.md"

[features]
default = ["orm-sqlx"]
openapi = ["zino-openapi"]
orm = ["orm-sqlx"]
orm-mariadb = ["orm-sqlx", "sqlx/mysql"]
orm-mysql = ["orm-sqlx", "sqlx/mysql"]
orm-postgres = ["orm-sqlx", "sqlx/postgres"]
orm-sqlite = ["orm-sqlx", "sqlx/sqlite"]
orm-sqlx = ["sqlx", "sqlx/sqlite", "zino-core/sqlx"]
orm-tidb = ["orm-sqlx", "sqlx/mysql"]

[dependencies]
apache-avro = { workspace = true }
cfg-if = { workspace = true }
chrono = { workspace = true }
convert_case = { workspace = true }
http = { workspace = true }
futures = { workspace = true }
regex = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
smallvec = { workspace = true }
toml = { workspace = true }
tracing = { workspace = true }
url = { workspace = true }
zino-core = { workspace = true }
zino-openapi = { workspace = true, optional = true }

[dependencies.sqlx]
version = "0.8.3"
optional = true
default-features = false
features = [
    "chrono",
    "json",
    "rust_decimal",
    "uuid",
]

[lints]
workspace = true
